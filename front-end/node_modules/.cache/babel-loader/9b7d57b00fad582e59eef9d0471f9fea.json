{"ast":null,"code":"var express = require('express');\n\nvar path = require('path');\n\nvar logger = require('morgan');\n\nvar cookieParser = require('cookie-parser');\n\nvar bodyParser = require('body-parser');\n\nvar index = require('./routes/index');\n\nvar app = express();\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n}); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade'); // uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use('../front-end/build', express.static(path.join(__dirname, 'build')));\napp.use('/', index); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nmodule.exports = app;","map":{"version":3,"sources":["C:\\Sibela\\Own work\\agile-advantage\\front-end\\src\\app\\app.js"],"names":["express","require","path","logger","cookieParser","bodyParser","index","app","use","req","res","next","header","set","join","__dirname","json","urlencoded","extended","static","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAIK,KAAK,GAAGL,OAAO,CAAC,gBAAD,CAAnB;;AAGA,IAAIM,GAAG,GAAGP,OAAO,EAAjB;AAEAO,GAAG,CAACC,GAAJ,CAAQ,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD,EAAAA,IAAI;AACL,CAJD,E,CAMA;;AACAJ,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBX,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAR,GAAG,CAACM,GAAJ,CAAQ,aAAR,EAAuB,MAAvB,E,CAEA;AACA;;AACAN,GAAG,CAACC,GAAJ,CAAQL,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACW,IAAX,EAAR;AACAT,GAAG,CAACC,GAAJ,CAAQH,UAAU,CAACY,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAX,GAAG,CAACC,GAAJ,CAAQJ,YAAY,EAApB;AACAG,GAAG,CAACC,GAAJ,CAAQ,oBAAR,EAA8BR,OAAO,CAACmB,MAAR,CAAejB,IAAI,CAACY,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAf,CAA9B;AAEAR,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,KAAb,E,CAGA;;AACAC,GAAG,CAACC,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/B,MAAIS,GAAG,GAAG,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,EAAAA,GAAG,CAACE,MAAJ,GAAa,GAAb;AACAX,EAAAA,IAAI,CAACS,GAAD,CAAJ;AACD,CAJD,E,CAMA;;AACAb,GAAG,CAACC,GAAJ,CAAQ,UAASY,GAAT,EAAcX,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACa,MAAJ,CAAWC,OAAX,GAAqBJ,GAAG,CAACI,OAAzB;AACAd,EAAAA,GAAG,CAACa,MAAJ,CAAWE,KAAX,GAAmBhB,GAAG,CAACF,GAAJ,CAAQmB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAV,EAAAA,GAAG,CAACY,MAAJ,CAAWF,GAAG,CAACE,MAAJ,IAAc,GAAzB;AACAZ,EAAAA,GAAG,CAACiB,MAAJ,CAAW,OAAX;AACD,CARD;AAUAC,MAAM,CAACC,OAAP,GAAiBtB,GAAjB","sourcesContent":["var express = require('express');\r\nvar path = require('path');\r\nvar logger = require('morgan');\r\nvar cookieParser = require('cookie-parser');\r\nvar bodyParser = require('body-parser');\r\n\r\nvar index = require('./routes/index');\r\n\r\n\r\nvar app = express();\r\n\r\napp.use(function (req, res, next) {\r\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n  next();\r\n});\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use('../front-end/build', express.static(path.join(__dirname, 'build')));\r\n\r\napp.use('/', index);\r\n\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n  var err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handler\r\napp.use(function(err, req, res, next) {\r\n  // set locals, only providing error in development\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\r\n\r\n  // render the error page\r\n  res.status(err.status || 500);\r\n  res.render('error');\r\n});\r\n\r\nmodule.exports = app;\r\n"]},"metadata":{},"sourceType":"module"}